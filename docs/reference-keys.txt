preámbulo
poo-programación-orientada-a-objetos
introducción
sistemas-de-programación-orientada-a-objetos
paradigmas
especificaciones-de-los-principales-sistemas-poo-en-r
tipos-de-objetos
objetos-base-vs-objetos-oo
r6
clases-y-métodos
encadenamiento-de-métodos
métodos-importantes
agregar-métodos-después-de-la-creación
controles-de-acceso
privacidad
campos-activos
semántica-de-referencia
razonamientos
finalización
campos-en-r6
por-qué-r6
ejercicios-prácticos
tidyquant
compatibilidad-de-funciones
funcionalidad-zoo
funcionalidad-xts
funcionalidad-quantmod
funcionalidad-ttr
funcionalidad-performanceanalytics
poder-cuantitativo-en-acción
ejemplo-1-utilizar-quantmod-periodreturn-para-convertir-precios-en-rentabilidad
ejemplo-1a-obtener-y-registrar-las-rentabilidades-anuales
ejemplo-1b-obtener-devoluciones-de-registros-diarios
ejemplo-2-utilice-xts-to.period-para-cambiar-la-periodicidad-de-diaria-a-mensual
ejemplo-3-utilice-ttr-runcor-para-visualizar-correlaciones-continuas-de-rendimientos
ejemplo-4-utilizar-ttrmacd-para-visualizar-la-divergencia-y-convergencia-de-la-media-móvil
ejemplo-5-utilizar-xtsapply.quarterly-para-obtener-el-precio-máximo-y-mínimo-para-cada-trimestre
ejemplo-6-utilizar-zoorollapply-para-visualizar-una-regresión-continua
ejemplo-7-utilizar-return.clean-y-return.excess-para-limpiar-y-calcular-el-exceso-de-rendimiento
qualitytools
fase-1-definir
fase-2-medir
capacidad-de-calibre---msa-tipo-i
repetibilidad-y-reproducibidad-del-calibre---msa-tipo-ii
fase-3-analizar
capacidad-del-proceso
fase-4-mejorar
diseños-factoriales-2k
diseños-factoriales-fraccionarios-2k-p
diseños-replicados-y-puntos-centrales
respuestas-múltiples
pasar-a-un-entorno-de-proceso-con-un-mayor-rendimiento-esperado
diseños-de-superficies-de-respuesta
deseabilidades
utilización-de-deseabilidades-junto-con-experimentos-diseñados
diseños-taguchi
cambio-de-funciones
fase-1-definir-1
función-pareto
fase-2-medir-1
función-cg
cgrunchart
cghist
cgtoleranceview
funcion-cg
